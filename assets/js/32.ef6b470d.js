(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{429:function(t,a,e){"use strict";e.r(a);var n=e(56),s=Object(n.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h3",{attrs:{id:"jsx란"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jsx란"}},[t._v("#")]),t._v(" "),e("strong",[t._v("JSX란?")])]),t._v(" "),e("p",[t._v("JSX는 자바스크립트의 확장 문법이다. JSX 문법을 활용하면 훨씬 더 편리하게 화면에 나타낼 코드를 작성할 수 있따.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("import ReactDOM from 'react-dom/client';\n\nReactDOM.render(<h1> Hello 리액트 </h1>, document.getElementById('root'));\n\n")])])]),e("h3",{attrs:{id:"jsx-문법"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jsx-문법"}},[t._v("#")]),t._v(" "),e("strong",[t._v("JSX 문법")])]),t._v(" "),e("p",[t._v("JSX는 자바스크립트로 HTML과 같은 문법을 사용할 수 있도록 만들어주는 편리한 문법이다.\nJSX문법 만의 규칙이 몇 가지 있다.")]),t._v(" "),e("h3",{attrs:{id:"html과-다른-속성명"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#html과-다른-속성명"}},[t._v("#")]),t._v(" "),e("strong",[t._v("HTML과 다른 속성명")])]),t._v(" "),e("h3",{attrs:{id:"_1-속성명은-카멜-케이스로-작성한다"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-속성명은-카멜-케이스로-작성한다"}},[t._v("#")]),t._v(" 1. 속성명은 카멜 케이스로 작성한다.")]),t._v(" "),e("p",[t._v("JSX 문법에서도 태그에 속성을 지정해 줄 수 있다. 여러 단어가 조합된 몇몇 속성들을 사용할 때는 반드시 카멜 케이스(Camel Case)로 작성해야 한다.\n예를 들면 "),e("strong",[e("code",[t._v("onclick")])]),t._v(", "),e("strong",[e("code",[t._v("onblur")])]),t._v(", "),e("strong",[e("code",[t._v("onfocus")])]),t._v(" 등과 같은 이벤트 속성이나, "),e("strong",[e("code",[t._v("tabindex")])]),t._v(" 같은 속성들을 카멜 케이스로 작성해야 한다. (다행히 이런 경우가 흔치는 않다!)")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("import ReactDOM from 'react-dom/client';\n\nReactDOM.render(\n  <button onClick= ... >클릭!</button>,\n  document.getElementById('root')\n);\n\n")])])]),e("p",[t._v("예외적으로 "),e("strong",[e("code",[t._v("data-*")])]),t._v(" 속성은 카멜 케이스(Camel Case)가 아니라 기존의 HTML 문법 그대로 작성하셔야 합니다.\nHTML 요소의 **"),e("code",[t._v("data-*")]),t._v("**로 시작하는 속성을 "),e("code",[t._v("데이터 속성")]),t._v(" 이라고 한다.\n브라우저가 (임의로 지정한) 데이터 속성에 관여하기 않기 때문에 특정한 데이터를 저장하고 싶은 경우 데이터 속성을 활용한다.\n"),e("span",{staticStyle:{"font-size":"0.2rem"}},[t._v(" 엄밀히 따지면 HTML 태그 사용하면서 data-라는 이름을 사용하지 않아도 태그에 없는 속성을 사용하는 경우를 모두 비표준 속성이라고 할 수 있다. 그러나 아무런 규칙도 없다면 코드가 엉망이 될 가능성이 크기 때문에 개발자 편의를 위해 사용하는 비표준 속성은 속성명을 작성할 때 data- 코드를 앞에 붙이는 것이 일종의 룰이라고 볼 수 있겠다. ")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('import ReactDOM from \'react-dom/client\';\n\nReactDOM.render(\n  <div>\n    상태 변경:\n    <button className="btn" data-status="대기중">대기중</button>\n    <button className="btn" data-status="진행중">진행중</button>\n    <button className="btn" data-status="완료">완료</button>\n  </div>,\n  document.getElementById(\'root\')\n);\n\n')])])]),e("h3",{attrs:{id:"_2-자바스크립트-예약어와-같은-속성명은-사용할-수-없고-프래그넌트를-적극-활용하자"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-자바스크립트-예약어와-같은-속성명은-사용할-수-없고-프래그넌트를-적극-활용하자"}},[t._v("#")]),t._v(" 2. 자바스크립트 예약어와 같은 속성명은 사용할 수 없고, 프래그넌트를 적극 활용하자!")]),t._v(" "),e("ul",[e("li",[t._v("프래그넌트(Fragment)는 React v16에 추가된 기능이다.")]),t._v(" "),e("li",[t._v("JSX는 컴포넌트가 여러 앨리먼트(element)를 하나의 태그로 묶어서 return해주어야 한다. (그렇지 않으면 인식을 못한다. 왜 그런지는.... 문법으로 받아들이기로 하자.) 원래는 아래처럼 div태그를 달아서 여러 앨리먼트를 하나의 태그로 묶어주었으나")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("import Header from '../Header';\nimport GoodsCard from '../GoodsCard';\n\nfunction MainContent() {\n  return (\n    <div>\n    <Header />\n    <GoodsCard />\n    </div>\n  );\n}\n\nexport default MainContent;\n\n")])])]),e("p",[t._v("이제는 div태그를 남발하지 않아도 된다!")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("import Header from '../Header';\nimport GoodsCard from '../GoodsCard';\n\nfunction MainContent() {\n  return (\n    <>\n    <Header />\n    <GoodsCard />\n    </>\n  );\n}\n\nexport default MainContent;\n")])])]),e("h2",{attrs:{id:"자바스크립트-표현식-넣기"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#자바스크립트-표현식-넣기"}},[t._v("#")]),t._v(" "),e("strong",[t._v("자바스크립트 표현식 넣기")])]),t._v(" "),e("p",[t._v("JSX 문법에서 **중괄호({})**를 활용하면 자바스크립트 표현식을 넣을 수 있다.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("import ReactDOM from 'react-dom/client';\n\nconst product = '맥북';\n\nReactDOM.render(\n  <h1>나만의 {product} 주문하기</h1>,\n  document.getElementById('root')\n);\n\n")])])]),e("p",[t._v("중괄호 문법을 잘 활용한다면 변수에 이미지 주소를 할당해서 "),e("strong",[e("code",[t._v("img")])]),t._v(" 태그의 "),e("strong",[e("code",[t._v("src")])]),t._v(" 속성값을 전달해 줄 수 있다.\n(이벤트 핸들러 사용하기도 편리하고, 중괄호에 다른 문자 조합하는 것도 가능하다.)")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('import \'./style/style.css\';\nimport userIcon from \'./assets/userIcon.svg\';\nimport searchIcon from \'./assets/searchIcon.svg\';\nimport bellIcon from \'./assets/bellIcon.svg\';\nimport hggLogo from \'./assets/hggLogo.png\';\n\nfunction Header() {\n  return (\n    <div className="header">\n      <img className="header__logo" src={hggLogo} alt="흒로고" />\n      <div className="header__icons">\n        <img className="header__icons-bell" src={bellIcon} alt="알림아이콘" />\n        <img className="header__icons-user" src={userIcon} alt="유저이미지" />\n        <img className="header__icons-search" src={searchIcon} alt="돋보기아이콘" />\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n\n')])])]),e("p",[t._v("단, 중괄호 안에서 for, if문 등의 문장은 다룰 수 없다.\n그렇다면 어떻게 조건문과 반복문을 사용할까?")]),t._v(" "),e("p",[t._v("조건문의 경우 삼항연산자, AND연산자, 즉시발동함수를 사용하고,\n반복문의 경우 "),e("code",[t._v("map()")]),t._v("을 사용하거나 일반 함수를 새로 만들어서 중괄호{}안에 그 함수를 넣는 방식을 사용해야한다.")]),t._v(" "),e("p",[t._v("**React에서 js와 같은 for 문을 사용하고 싶다면 따로 "),e("code",[t._v("함수")]),t._v("를 만들어 사용해야한다.")])])}),[],!1,null,null,null);a.default=s.exports}}]);