(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{430:function(t,e,n){"use strict";n.r(e);var s=n(56),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"state-정의"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#state-정의"}},[t._v("#")]),t._v(" state 정의")]),t._v(" "),n("p",[t._v("리액트에서 state는 컴포넌트 내부에서 바뀔 수 있는 값을 의미함.\nprops는 컴포넌트가 사용되는 과정에서 부모 컴포넌트가 설정하는 값이며, 컴포넌트 자신은 해당 props를 읽기 전용으로만 사용할 수 있음.\n두 가지 종류가 있음.")]),t._v(" "),n("ul",[n("li",[t._v("클래스형 컴포넌트가 지니고 있는 state")]),t._v(" "),n("li",[t._v("함수형 컴포넌트에서 useState 함수 통해 사용하는 state")])]),t._v(" "),n("h2",{attrs:{id:"클래스형-컴포넌트의-state"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#클래스형-컴포넌트의-state"}},[t._v("#")]),t._v(" 클래스형 컴포넌트의 state")]),t._v(" "),n("ul",[n("li",[t._v("예제 코드를 살펴보자.")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("import React, {Component} from 'react';\n\nclass Counter extends Component {\n  constructor(props)  {\n    super(props)l\n    //\n    this.state = {\n      number:0\n    };\n  }\n  render() {\n    const {number} = this.state;\n    return (\n      <div>\n        <h1> {number} </h1>\n        <button\n          onClick={() => {\n            this.setState({number:number+1});\n          }}\n        > +1\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Counter;\n")])])]),n("p",[t._v("이 코드는 버튼을 클릭할 때마다 화면상에 숫자가 1씩 + 되는 코드다.")]),t._v(" "),n("p",[t._v("코드를 살펴 보자.")]),t._v(" "),n("ol",[n("li",[t._v("컴포넌트에 state를 설정할 때는 다음과 같이 생성자(constructor) 메서드를 작성하여 설정한다.")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("constructor(props) {\n  super(props);\n  this.state = {\n    number:0\n  };\n}\n")])])]),n("p",[t._v("이때, 클래스형 컴포넌트에서 constructor를 작성할 때는 반드시 super(props)를 호출해주어야 한다. "),n("code",[t._v("this.state")]),t._v(" 로하여 초깃값을 설정해줄 수 있다.")]),t._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[t._v("render함수에서 현재 state를 조회할 때는 "),n("code",[t._v("this.state")]),t._v("를 조회하면 된다.")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("render() {\n  const { number } = this.state; // state를 조회할 때는 this.state를 이용함\n  return (\n    <div>\n      <h1>{ number }</h1>\n      <button\n        onClick = {()=> {\n          this.setState({ number:number+1 });\n        }}\n      > +1\n      </button>\n    </div>\n  );\n}\n")])])]),n("p",[t._v("위 코드에서는 button안에 onClick 값을 props로 넣어주어 버튼이 클릭될 때 호출되는 함수를 설정해주었다.\n다시 말하면 이 코드는 onClick 값을 button안에 props로 넣었으므로 해당 버튼을 클릭하면 button의 값이 1씩 증가할 수 있는 것이다.\n**참고: 이벤트를 설정할 때는 arrow function을 사용한다.")]),t._v(" "),n("h2",{attrs:{id:"함수형-컴포넌트에서-usestate-사용하기"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#함수형-컴포넌트에서-usestate-사용하기"}},[t._v("#")]),t._v(" 함수형 컴포넌트에서 useState 사용하기")]),t._v(" "),n("p",[t._v("useState함수를 사용하여 함수형 컴포넌트에서 state를 사용할 수 있다.")]),t._v(" "),n("p",[t._v("이를 이해하기 위해서 선행 지식으로 "),n("strong",[t._v("배열 비구조화 할당")]),t._v("이 무엇인지 알아야 한다.")]),t._v(" "),n("p",[t._v("이제 코드를 보자.")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("import React, { useState } from 'react;\n\nconst Say = () => {\n  const [message, setMessage] = useState('');\n  const onClickEnter = () => setMessage('안녕하세요');\n  const onClickLeave = () => setMessage('안녕히 가세요!');\n\n  return (\n    <div>\n      <button onClick= {onCLickEnter}>입장</button>\n      <button onClick= {onClickLeave}>퇴장</button>\n      <h1> {message} </h1>\n    </div>\n\n    export default Say;\n  );\n}\n")])])]),n("ul",[n("li",[n("code",[t._v("useState 함수")]),t._v("를 호출하면 배열이 반환된다.")]),t._v(" "),n("li",[t._v("배열의 첫 번째 원소"),n("code",[t._v("[message]")]),t._v("는 현재 상태이고, 두 번째 원소["),n("code",[t._v("setMessage")]),t._v("]는 상태를 바꾸어 주는 함수이다. (이 함수의 명칭은 setter이다)")]),t._v(" "),n("li",[t._v("배열 비구조화 할당을 통해 이름을 자유롭게 정해줄 수 있다. "),n("code",[t._v("[message, setMessage]")])])])])}),[],!1,null,null,null);e.default=a.exports}}]);